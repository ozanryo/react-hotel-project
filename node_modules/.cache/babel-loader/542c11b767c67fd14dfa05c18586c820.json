{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bootcamp\\\\Code_VSC\\\\React\\\\Day41\\\\react-kepo\\\\src\\\\pages\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport './Home.css';\nimport logo from '../../assets/images/home.png';\nimport BuildTable from \"../../components/Table/TableList\";\nimport { connect } from \"react-redux\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchDataHotel = (url, inputMethod) => {\n      try {\n        const option = {\n          method: inputMethod,\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Credentials\": true\n          }\n        };\n        fetch(\"http://localhost:8887/web/hotel\" + url, option).then(response => response.json()).then(async json => {\n          console.log(\"Json : \", json);\n          const listUser = await json.map(hotel => {\n            return {\n              id: hotel.id,\n              hotelName: hotel.name,\n              kota: hotel.kota,\n              jumlahKamar: hotel.kamar,\n              terpakai: hotel.address,\n              tersedia: hotel.tersedia\n            };\n          });\n          console.log(listUser);\n          this.props.HotelFetchData(listUser);\n        });\n      } catch (error) {\n        if (error instanceof fetch.AbortError) {\n          console.log(\"Request Hotel Data Was Aborted\");\n        }\n      }\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.fetchDataHotel(\"/list\", \"get\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BuildTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nmapDispatchToProps = dispatch => {\n  return {\n    HotelFetchData: hotel => dispatch({\n      type: \"FETCH_DATA_HOTEL\",\n      data: hotel\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Home);","map":{"version":3,"sources":["D:/Bootcamp/Code_VSC/React/Day41/react-kepo/src/pages/Home/Home.js"],"names":["React","Component","logo","BuildTable","connect","Home","constructor","props","fetchDataHotel","url","inputMethod","option","method","mode","headers","fetch","then","response","json","console","log","listUser","map","hotel","id","hotelName","name","kota","jumlahKamar","kamar","terpakai","address","tersedia","HotelFetchData","error","AbortError","state","componentDidMount","render","mapDispatchToProps","dispatch","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBC,cALkB,GAKD,CAACC,GAAD,EAAMC,WAAN,KAAsB;AACrC,UAAG;AACC,cAAMC,MAAM,GAAG;AACXC,UAAAA,MAAM,EAAEF,WADG;AAEXG,UAAAA,IAAI,EAAE,MAFK;AAGXC,UAAAA,OAAO,EAAC;AACJ,4BAAgB,kBADZ;AAEJ,2CAAgC,GAF5B;AAGJ,gDAAqC;AAHjC;AAHG,SAAf;AAUAC,QAAAA,KAAK,CAAC,oCAAoCN,GAArC,EAA0CE,MAA1C,CAAL,CACKK,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEU,MAAME,IAAN,IAAc;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AAEA,gBAAMG,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,KAAK,IAAI;AACrC,mBAAO;AACHC,cAAAA,EAAE,EAAED,KAAK,CAACC,EADP;AAEHC,cAAAA,SAAS,EAAEF,KAAK,CAACG,IAFd;AAGHC,cAAAA,IAAI,EAAEJ,KAAK,CAACI,IAHT;AAIHC,cAAAA,WAAW,EAAEL,KAAK,CAACM,KAJhB;AAKHC,cAAAA,QAAQ,EAAEP,KAAK,CAACQ,OALb;AAMHC,cAAAA,QAAQ,EAAET,KAAK,CAACS;AANb,aAAP;AAQH,WATsB,CAAvB;AAUAb,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,eAAKd,KAAL,CAAW0B,cAAX,CAA0BZ,QAA1B;AACH,SAjBL;AAkBH,OA7BD,CA6BE,OAAOa,KAAP,EAAc;AACZ,YAAIA,KAAK,YAAYnB,KAAK,CAACoB,UAA3B,EAAuC;AACnChB,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;AACJ;AACF,KAxCiB;;AAEhB,SAAKgB,KAAL,GAAY,EAAZ;AACD;;AAuCDC,EAAAA,iBAAiB,GAAE;AACjB,SAAK7B,cAAL,CAAoB,OAApB,EAA6B,KAA7B;AACD;;AAED8B,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADF;AAgBD;;AAhE0B;;AAmE7BC,kBAAkB,GAAEC,QAAD,IAAY;AAC7B,SAAM;AACJP,IAAAA,cAAc,EAAGV,KAAD,IAAWiB,QAAQ,CAAC;AAChCC,MAAAA,IAAI,EAAE,kBAD0B;AAEhCC,MAAAA,IAAI,EAAEnB;AAF0B,KAAD;AAD/B,GAAN;AAMD,CAPD;;AAUA,eAAenB,OAAO,CAAC,IAAD,EAAOmC,kBAAP,CAAP,CAAkClC,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Home.css'\r\nimport logo from '../../assets/images/home.png'\r\nimport BuildTable from \"../../components/Table/TableList\";\r\nimport {connect} from \"react-redux\"\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={}\r\n  }\r\n\r\n  fetchDataHotel = (url, inputMethod) => {\r\n    try{\r\n        const option = {\r\n            method: inputMethod,\r\n            mode: \"cors\",\r\n            headers:{ \r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\" : \"*\", \r\n                \"Access-Control-Allow-Credentials\" : true \r\n            }\r\n        }\r\n\r\n        fetch(\"http://localhost:8887/web/hotel\" + url, option)\r\n            .then(response => response.json())\r\n            .then(async json => {\r\n                console.log(\"Json : \", json);\r\n                \r\n                const listUser = await json.map(hotel => {\r\n                    return {\r\n                        id: hotel.id,\r\n                        hotelName: hotel.name,\r\n                        kota: hotel.kota,\r\n                        jumlahKamar: hotel.kamar,\r\n                        terpakai: hotel.address,\r\n                        tersedia: hotel.tersedia\r\n                    }\r\n                })\r\n                console.log(listUser)\r\n                this.props.HotelFetchData(listUser);\r\n            })\r\n    } catch (error) {\r\n        if (error instanceof fetch.AbortError) {\r\n            console.log(\"Request Hotel Data Was Aborted\")\r\n        }\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchDataHotel(\"/list\", \"get\")\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"hero-content\">\r\n        {/* <img src={logo} alt=\"\" style={{  marginTop: '16px', marginBottom: '36px' }}/>\r\n          <div className=\"hero-title\">\r\n            Lorem Ipsum\r\n          </div>\r\n          <div>\r\n            <p className=\"hero-paragraph\">\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n              Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n              Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </p>\r\n          </div> */}\r\n          <BuildTable />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nmapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    HotelFetchData: (hotel) => dispatch({\r\n        type: \"FETCH_DATA_HOTEL\",\r\n        data: hotel\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}