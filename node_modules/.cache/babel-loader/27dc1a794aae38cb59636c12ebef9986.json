{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bootcamp\\\\Code_VSC\\\\React\\\\Day41\\\\react-kepo\\\\src\\\\components\\\\Table\\\\TableList.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { useTable, usePagination } from 'react-table';\nimport \"./Table.css\";\n\nfunction BuildTable() {\n  const [filter, setFilter] = useState(\"\");\n  const [data, setData] = useState(this.props.hotel_data);\n  const columns = React.useMemo(() => [{\n    Header: 'No',\n    accessor: 'id' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Nama Hotel',\n    accessor: 'name'\n  }, {\n    Header: 'Kota',\n    accessor: \"kota\"\n  }, {\n    Header: 'Jumlah Kamar',\n    accessor: \"kamar\"\n  }, {\n    Header: 'Kamar Terpakai',\n    accessor: \"terpakai\"\n  }, {\n    Header: 'Kamar Tersedia',\n    accessor: \"tersedia\"\n  }, {\n    Header: 'Harga Kamar',\n    accessor: \"harga\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    // rows,\n    page,\n    nextPage,\n    previousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    state,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, usePagination);\n  const {\n    pageIndex\n  } = state;\n  useEffect(() => {\n    console.log(filter);\n    const filterResult = data.filter(res => res.col2.toLowerCase().includes(filter.toLowerCase()));\n    setData(filterResult);\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"filter\",\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), page.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"firstPage\",\n    onClick: () => gotoPage(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, '<<'), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"previousButton\",\n    onClick: () => previousPage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Previous\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"searchPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Go to page : \", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      width: \"50px\"\n    },\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(pageNumber);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"pageInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Page\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, pageIndex + 1, \" of \", pageOptions.length), ' ')), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nextButton\",\n    onClick: () => nextPage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Next\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"lastPage\",\n    onClick: () => gotoPage(pageCount - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, '>>'))));\n}\n\nconst mapStateToProps = state => ({\n  hotel_data: state.HotelData.data\n});\n\nexport default connect(mapStateToProps)(BuildTable);","map":{"version":3,"sources":["D:/Bootcamp/Code_VSC/React/Day41/react-kepo/src/components/Table/TableList.js"],"names":["React","useEffect","useState","Component","connect","useTable","usePagination","BuildTable","filter","setFilter","data","setData","props","hotel_data","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","pageOptions","gotoPage","pageCount","state","prepareRow","pageIndex","console","log","filterResult","res","col2","toLowerCase","includes","e","target","value","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","width","pageNumber","Number","length","mapStateToProps","HotelData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,aAAxC;AACA,OAAO,aAAP;;AAEA,SAASC,UAAT,GAAqB;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAKU,KAAL,CAAWC,UAAZ,CAAhC;AAEA,QAAMC,OAAO,GAAGd,KAAK,CAACe,OAAN,CAChB,MAAM,CACJ;AACEC,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,QAAQ,EAAE,IAFZ,CAEiB;;AAFjB,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EAQD;AACDD,IAAAA,MAAM,EAAE,MADP;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GARC,EAWD;AACDD,IAAAA,MAAM,EAAE,cADP;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAXC,EAcD;AACDD,IAAAA,MAAM,EAAE,gBADP;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAdC,EAiBD;AACDD,IAAAA,MAAM,EAAE,gBADP;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAjBC,EAoBD;AACDD,IAAAA,MAAM,EAAE,aADP;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GApBC,CADU,EAyBb,EAzBa,CAAhB;AA4BA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJ;AACAC,IAAAA,IALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA,QATI;AAUJC,IAAAA,SAVI;AAWJC,IAAAA,KAXI;AAYJC,IAAAA;AAZI,MAaFvB,QAAQ,CAAC;AAAES,IAAAA,OAAF;AAAWJ,IAAAA;AAAX,GAAD,EAAoBJ,aAApB,CAbZ;AAeA,QAAM;AAAEuB,IAAAA;AAAF,MAAgBF,KAAtB;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACV6B,IAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AACA,UAAMwB,YAAY,GAAGtB,IAAI,CAACF,MAAL,CAAYyB,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgC5B,MAAM,CAAC2B,WAAP,EAAhC,CAAnB,CAArB;AACAxB,IAAAA,OAAO,CAACqB,YAAD,CAAP;AACH,GAJM,EAIJ,CAACxB,MAAD,CAJI,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,QAAQ,EAAE6B,CAAC,IAAI5B,SAAS,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE,+CAAWrB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,YAAY,CAACoB,GAAb,CAAiBC,WAAW,iBAC1B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEID,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC5B,4CAAQA,MAAM,CAACC,cAAP,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,MAAM,CAACE,MAAP,CAAc,QAAd,CADH,CADF,CAFJ,CADF,CAFJ,CADF,eAiBE,+CAAW3B,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACmB,GAAL,CAASO,GAAG,IAAI;AACfnB,IAAAA,UAAU,CAACmB,GAAD,CAAV;AACA,wBACE,4CAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAcU,IAAI,IAAI;AACrB,0BACE,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,IAAI,CAACJ,MAAL,CAAY,MAAZ,CADH,CADF;AAKD,KANA,CADH,CADF;AAWD,GAbA,CADH,CAjBF,CAJF,eAuCE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAC,CAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IADL,CADJ,eAII;AAAI,IAAA,SAAS,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAE,MAAMF,YAAY,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,eASI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACkB,GADlB,eAEI;AAAO,IAAA,KAAK,EAAE;AAAC6B,MAAAA,KAAK,EAAC;AAAP,KAAd;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,YAAY,EAAEvB,SAAS,GAAG,CAAtE;AAAyE,IAAA,QAAQ,EAAEQ,CAAC,IAAI;AACpF,YAAMgB,UAAU,GAAGhB,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBe,MAAM,CAACjB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,GAAyB,CAA1C,GAA8C,CAAjE;AACAd,MAAAA,QAAQ,CAAC4B,UAAD,CAAR;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CATJ,eAmBI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACS,GADT,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,SAAS,GAAG,CADjB,UACwBL,WAAW,CAAC+B,MADpC,CAFJ,EAIc,GAJd,CADJ,CAnBJ,eA2BI;AAAI,IAAA,SAAS,EAAC,YAAd;AAA2B,IAAA,OAAO,EAAE,MAAMjC,QAAQ,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CA3BJ,eAgCI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAACC,SAAS,GAAG,CAAb,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IADL,CAhCJ,CADN,CAvCF,CADF;AAgFL;;AAED,MAAM8B,eAAe,GAAI7B,KAAD,KAAY;AAChCd,EAAAA,UAAU,EAAEc,KAAK,CAAC8B,SAAN,CAAgB/C;AADI,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACoD,eAAD,CAAP,CAAyBjD,UAAzB,CAAf","sourcesContent":["import React, {useEffect, useState, Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTable, usePagination } from 'react-table'\r\nimport \"./Table.css\"\r\n\r\nfunction BuildTable(){\r\n      const [filter, setFilter] = useState(\"\");\r\n      const [data, setData] = useState(this.props.hotel_data);\r\n  \r\n      const columns = React.useMemo(\r\n      () => [\r\n        {\r\n          Header: 'No',\r\n          accessor: 'id' // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Nama Hotel',\r\n          accessor: 'name'\r\n        }, {\r\n          Header: 'Kota',\r\n          accessor: \"kota\"\r\n        }, {\r\n          Header: 'Jumlah Kamar',\r\n          accessor: \"kamar\"\r\n        }, {\r\n          Header: 'Kamar Terpakai',\r\n          accessor: \"terpakai\"\r\n        }, {\r\n          Header: 'Kamar Tersedia',\r\n          accessor: \"tersedia\"\r\n        }, {\r\n          Header: 'Harga Kamar',\r\n          accessor: \"harga\"\r\n        }\r\n      ], []\r\n      )\r\n  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        // rows,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        state,\r\n        prepareRow\r\n      } = useTable({ columns, data }, usePagination)\r\n    \r\n      const { pageIndex } = state;\r\n  \r\n      useEffect(() => {\r\n            console.log(filter);\r\n            const filterResult = data.filter(res => res.col2.toLowerCase().includes(filter.toLowerCase()))\r\n            setData(filterResult)\r\n        }, [filter]\r\n      )\r\n  \r\n      return (\r\n        <div className=\"hero-content\">\r\n        \r\n          <input type=\"text\" name=\"filter\" onChange={e => setFilter(e.target.value)} />\r\n          \r\n          <table {...getTableProps()}>\r\n            <thead>\r\n              {\r\n                headerGroups.map(headerGroup => (\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {\r\n                      headerGroup.headers.map(column => (\r\n                        <th {...column.getHeaderProps()}>\r\n                          {column.render('Header')}\r\n                        </th>\r\n                      ))\r\n                    }\r\n                  </tr>\r\n                ))\r\n              }\r\n            </thead>\r\n    \r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>\r\n                          {cell.render('Cell')}\r\n                        </td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </table>\r\n    \r\n          <div className=\"pagination\">\r\n                <ul>\r\n                    <li className=\"firstPage\" onClick={() => gotoPage(0)}>\r\n                        {'<<'}\r\n                    </li>\r\n                    <li className=\"previousButton\" onClick={() => previousPage()}>\r\n                        <span>\r\n                            Previous \r\n                        </span>\r\n                    </li>\r\n                    <li className=\"searchPage\">\r\n                        <span>\r\n                            Go to page : {' '}\r\n                            <input style={{width:\"50px\"}} type=\"number\" defaultValue={pageIndex + 1} onChange={e => {\r\n                                const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                gotoPage(pageNumber)\r\n                            }}\r\n                            />\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"pageInfo\">\r\n                        <span>\r\n                            Page{' '}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{' '}\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"nextButton\" onClick={() => nextPage()}>\r\n                        <span>\r\n                            Next\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"lastPage\" onClick={() => gotoPage(pageCount - 1)}>\r\n                        {'>>'}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    hotel_data: state.HotelData.data\r\n  })\r\n  \r\nexport default connect(mapStateToProps)(BuildTable);"]},"metadata":{},"sourceType":"module"}